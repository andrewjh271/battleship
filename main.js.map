{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA,YAAY,4CAA4C;AACD;AACV;AACM;;AAEnD;;AAEA,eAAe,oEAAe;AAC9B,0DAAU;;AAEV;AACA,UAAU,QAAQ;AAClB;AACA,cAAc,gEAAkB;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA,uCAAuC,0BAA0B;AACjE;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACnBmD;AACnB;AAC2B;AACK;;AAEhE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,4CAAc;AAC9B;AACA,sCAAsC,iDAAS;AAC/C;AACA;AACA;AACA;AACA,EAAE,0DAAc;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA,6CAAE;AACF,6CAAE;;AAEF;AACA,UAAU,6BAA6B;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI,6DAAiB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,4CAAc;AAC9B;;AAEA;AACA;AACA;;AAEA,EAAE,6DAAiB;AACnB,kCAAkC,qDAAqD;AACvF;AACA,GAAG;AACH,qCAAqC,2CAA2C;AAChF;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEsB;;;;;;;;;;;;;;;;AClHtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkD;;;;;;;;;;;;;;;;;ACVlD;AACkC;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+CAAI;AACV,KAAK;AACL,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,+CAAI;AACN;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,KAAK;AAC/B,yBAAyB,oBAAoB;AAC7C,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;ACtDrF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,8BAA8B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEyB;;;;;;;;;;;;;;;;;ACxBzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB,WAAW,SAAS;AACzF;AACA;AACA,6EAA6E,SAAS;AACtF;AACA;AACA,+CAA+C,qBAAqB,WAAW,SAAS;AACxF;AACA;AACA;AACA;AACA;AACA;;AAEqD;;;;;;;UCnCrD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACyB","sources":["webpack://battleship/./src/DOMController.js","webpack://battleship/./src/DOMInitializeBoard.js","webpack://battleship/./src/DOMSetupBoard.js","webpack://battleship/./src/coordinates.js","webpack://battleship/./src/draggable.js","webpack://battleship/./src/imageGenerator.js","webpack://battleship/./src/observer.js","webpack://battleship/./src/rotatable.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/./src/index.js"],"sourcesContent":["// import { humanPlayerFactory, computerPlayerFactory } from './player';\nimport { initializeBoard } from './DOMInitializeBoard';\nimport { setupBoard } from './DOMSetupBoard';\nimport { indexToCoordinates } from './coordinates';\n\nconst ROWS = 10;\n\nconst board1 = initializeBoard('board1', ROWS);\nsetupBoard(board1);\n\nfunction handleAttack(e) {\n  const { index } = e.target.dataset;\n  if (!index) return;\n  console.log(indexToCoordinates(index));\n}\n\nfunction listenForAttack(board) {\n  board.addEventListener('click', handleAttack);\n}\n\n// function unListenForAttack(board) {\n//   board.removeEventListener('click', handleAttack);\n// }\n\nlistenForAttack(board1);\n","/* eslint-disable no-param-reassign */\nfunction createGrid(rows, board) {\n  board.cells = [];\n  for (let i = 0; i < rows * rows; i++) {\n    board.cells[i] = document.createElement('div');\n    board.cells[i].classList.add('cell');\n    board.cells[i].style.gridArea = `${Math.floor(i / rows) + 1} / ${\n      (i % rows) + 1\n    } / span 1 / span 1`;\n    board.cells[i].dataset.index = i;\n    board.appendChild(board.cells[i]);\n  }\n}\n\nfunction initializeBoard(id, rows) {\n  const board = document.getElementById(id)\n  board.numRows = rows;\n  createGrid(rows, board);\n  return board;\n}\n\nexport { initializeBoard }","import * as imageGenerator from './imageGenerator';\nimport { on } from './observer';\nimport { dragStart, resetDraggedImage } from './draggable';\nimport { setStagedImage, adjustForRotation } from './rotatable';\n\n// const setupContainer = document.querySelector('.board-setup-container');\nconst stagingArea = document.querySelector('.staging-area');\nconst previews = document.querySelectorAll('.img-preview');\nconst clearButton = document.querySelector('.clear');\n\npreviews.forEach((preview) => preview.addEventListener('click', showStagedImage));\nclearButton.addEventListener('click', clearPlacedImages);\n\nlet currentBoard;\nfunction setupBoard(board) {\n  // show setupContainer, configure container\n  currentBoard = board;\n}\n\nfunction showStagedImage() {\n  const image = imageGenerator[this.id]();\n  image.classList.add('staging-img');\n  image.addEventListener('mousedown', dragStart);\n  if (stagingArea.firstChild) {\n    stagingArea.removeChild(stagingArea.firstChild);\n  }\n  stagingArea.appendChild(image);\n  setStagedImage(image);\n}\n\nfunction clearPlacedImages() {\n  const children = Array.from(currentBoard.children);\n  children.forEach(element => {\n    if (element.classList.contains('placed-img-wrapper')) {\n      element.remove();\n    } else {\n      element.classList.remove('highlight-placed');\n    }\n  })\n}\n\non('dragEvent', highlightHoveredCells);\non('dragEnd', handleRelease);\n\nfunction highlightHoveredCells(positionData) {\n  const { startX, endX, startY, endY } = positionData;\n\n  currentBoard.cells.forEach((cell) => {\n    const bound = cell.getBoundingClientRect();\n    const half = bound.width / 2;\n\n    const maxLeft = bound.left + half;\n    const minRight = bound.right - half;\n    const maxTop = bound.top + half;\n    const minBottom = bound.bottom - half;\n\n    if (startX < maxLeft && endX > minRight && startY < maxTop && endY > minBottom) {\n      cell.classList.add('highlight-hovered');\n    } else {\n      cell.classList.remove('highlight-hovered');\n    }\n  });\n}\n\nfunction handleRelease(element) {\n  const validArea = currentBoard.cells.filter(\n    (cell) =>\n      cell.classList.contains('highlight-hovered') && !cell.classList.contains('highlight-placed')\n  ).length;\n  if (validArea === element.area) {\n    placeImage(element);\n    element.remove();\n    updateHighlights();\n  } else {\n    resetDraggedImage(element);\n    removeDraggedHighlights();\n  }\n}\n\nfunction placeImage(element) {\n  const imageWrapper = document.createElement('div');\n  imageWrapper.classList.add('placed-img-wrapper');\n  const image = imageGenerator[element.type]();\n  image.classList.add('placed-img');\n\n  const startingCell = currentBoard.cells.findIndex((cell) =>\n    cell.classList.contains('highlight-hovered')\n  );\n\n  adjustForRotation(element, image, imageWrapper);\n  imageWrapper.style.gridRow = `${Math.floor(startingCell / currentBoard.numRows) + 1} / span ${\n    element.spanY\n  }`;\n  imageWrapper.style.gridColumn = `${(startingCell % currentBoard.numRows) + 1} / span ${\n    element.spanX\n  }`;\n\n  imageWrapper.appendChild(image);\n  currentBoard.appendChild(imageWrapper);\n}\n\nfunction removeDraggedHighlights() {\n  currentBoard.cells.forEach((cell) => cell.classList.remove('highlight-hovered'));\n}\n\nfunction updateHighlights() {\n  currentBoard.cells.forEach((cell) => {\n    if (cell.classList.contains('highlight-hovered')) {\n      cell.classList.remove('highlight-hovered');\n      cell.classList.add('highlight-placed');\n    }\n  });\n}\n\nexport { setupBoard };\n","function indexToCoordinates(index) {\n  const x = index % 10;\n  const y = Math.floor(index / 10);\n  return [x, y];\n}\n\nfunction coordinatesToIndex(coords) {\n  return coords[1] * 10 + coords[0];\n}\n\nexport { indexToCoordinates, coordinatesToIndex };\n","/* eslint-disable no-param-reassign */\nimport { emit } from './observer';\n\nlet cursorOffsetX;\nlet cursurOffsetY;\n\nfunction dragStart(e) {\n  e.preventDefault();\n  cursorOffsetX = e.clientX - this.offsetLeft;\n  cursurOffsetY = e.clientY - this.offsetTop;\n  this.classList.add('grabbing');\n\n  const boundDragMove = dragMove.bind(this);\n  document.addEventListener('mousemove', boundDragMove);\n  document.addEventListener(\n    'mouseup',\n    () => {\n      document.removeEventListener('mousemove', boundDragMove);\n      emit('dragEnd', this);\n    },\n    { once: true }\n  );\n}\n\nfunction dragMove(e) {\n  this.style.top = (e.clientY - cursurOffsetY).toString() + 'px';\n  this.style.left = (e.clientX - cursorOffsetX).toString() + 'px';\n  const bound = this.getBoundingClientRect();\n  const positionData = {\n    startX: bound.left,\n    endX: bound.right,\n    startY: bound.top,\n    endY: bound.bottom,\n  };\n\n  emit('dragEvent', positionData);\n}\n\nfunction resetDraggedImage(element) {\n  element.style.top = '';\n  element.style.left = '';\n}\n\nexport { dragStart, resetDraggedImage }","const board = document.querySelector('.board');\nconst boardWidth = board.offsetWidth;\nconst squareWidth = boardWidth / 10; // number of cells in row\n\nfunction flute() {\n  return newImage('flute', 1, 3);\n}\n\nfunction trombone() {\n  const image = newImage('trombone', 1, 5);\n  image.classList.add('stretch');\n  return image;\n}\n\nfunction clarinet() {\n  return newImage('clarinet', 1, 3);\n}\n\nfunction violin() {\n  return newImage('violin', 1, 3);\n}\n\nfunction bassoon() {\n  return newImage('bassoon', 1, 4);\n}\n\nfunction cello() {\n  return newImage('cello', 2, 5);\n}\n\nfunction horn() {\n  return newImage('horn', 2, 2);\n}\n\nfunction piccolo() {\n  return newImage('piccolo', 1, 2);\n}\n\nfunction trumpet() {\n  return newImage('trumpet', 1, 3);\n}\n\nfunction newImage(type, width, height) {\n  const image = new Image();\n  image.src = `./images/${type}.png`;\n  image.style.width = `${squareWidth * width}px`;\n  image.style.height = `${squareWidth * height}px`;\n  image.spanX = width;\n  image.spanY = height;\n  image.area = width * height;\n  image.type = type;\n  return image;\n}\n\nexport { clarinet, flute, trombone, violin, bassoon, cello, horn, trumpet, piccolo };\n","const events = {};\n\nfunction on(eventName, fn) {\n  events[eventName] ||= [];\n  events[eventName].push(fn);\n}\n\nfunction off(eventName, fn) {\n  if (!events[eventName]) return;\n\n  for (let i = 0; i < events[eventName].length; i++) {\n    if (events[eventName][i] === fn) {\n      events[eventName].splice(i, 1);\n      break;\n    }\n  }\n}\n\nfunction emit(eventName, data) {\n  if (!events[eventName]) return;\n\n  events[eventName].forEach((fn) => fn(data));\n}\n\nexport { on, off, emit };\n","/* eslint-disable no-param-reassign */\nconst rotateButton = document.querySelector('.rotate');\nrotateButton.addEventListener('click', rotate);\n\nlet currentStagedImage;\n\nfunction rotate() {\n  if (!currentStagedImage) return;\n  const rotation = Number(currentStagedImage.style.transform.match(/\\d+(?=deg)/)) % 360;\n  currentStagedImage.style.transform = `rotate(${rotation + 90}deg)`;\n}\n\nfunction setStagedImage(current) {\n  currentStagedImage = current;\n}\n\nfunction adjustForRotation(draggedImage, newImage, wrapper) {\n  const rotation = Number(draggedImage.style.transform.match(/\\d+(?=deg)/)) % 360;\n  if (!rotation) return;\n  switch (rotation) {\n    case 90:\n      newImage.style.transform = `translateX(${newImage.style.height}) rotate(${rotation}deg)`;\n      break;\n    case 180:\n      newImage.style.transform = `translateY(100%) translateX(100%) rotate(${rotation}deg)`;\n      break;\n    default: // 270\n      newImage.style.transform = `translateY(${newImage.style.width}) rotate(${rotation}deg)`;\n  }\n  if (rotation !== 180) {\n    wrapper.style.height = newImage.style.width;\n    [draggedImage.spanY, draggedImage.spanX] = [draggedImage.spanX, draggedImage.spanY];\n  }\n}\n\nexport { rotate, setStagedImage, adjustForRotation };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import './setup';\nimport './DOMController';\n"],"names":[],"sourceRoot":""}