{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAAqE;AAClB;AACnB;AACmB;AACnC;;AAEhB;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA,uCAAuC,wBAAwB;AAC/D;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA,6CAAE;AACF,6CAAE;;AAEF;;AAEA;AACA,UAAU,6BAA6B;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,4CAAc;AAC9B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB,WAAW,UAAU;AACpF,MAAM;AACN,4CAA4C,kBAAkB,WAAW,UAAU;AACnF,MAAM;AACN,0EAA0E,UAAU;AACpF;AACA;;AAEA,kCAAkC,4BAA4B,SAAS,cAAc;AACrF,qCAAqC,kBAAkB,SAAS,cAAc;;AAE9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,QAAQ;AAClB;AACA,cAAc,gEAAkB;AAChC;;AAEA;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkD;;;;;;;;;;;;;;ACVC;AACjB;;AAElC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,4CAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,IAAI;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+CAAI;AACV,KAAK;AACL,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,+CAAI;AACN;;;;;;;;;;;;;;;;;;;;;;;AC5EA;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,KAAK;AAC/B,yBAAyB,oBAAoB;AAC7C,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;ACvDrF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,8BAA8B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEyB;;;;;;;;;;;;;;;;ACxBzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,UAAU;AAC5B,oBAAoB,UAAU;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;;AAEqD;;;;;;;UCtErD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACyB","sources":["webpack://battleship/./src/DOMController.js","webpack://battleship/./src/coordinates.js","webpack://battleship/./src/drag.js","webpack://battleship/./src/imageGenerator.js","webpack://battleship/./src/observer.js","webpack://battleship/./src/player.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/./src/index.js"],"sourcesContent":["import { humanPlayerFactory, computerPlayerFactory } from './player';\nimport { indexToCoordinates } from './coordinates';\nimport { on } from './observer';\nimport * as imageGenerator from './imageGenerator';\nimport './drag';\n\nfunction createGrid(numberOfCells, board) {\n  board.cells = [];\n  for (let i = 0; i < numberOfCells; i++) {\n    board.cells[i] = document.createElement('div');\n    board.cells[i].classList.add('cell');\n    board.cells[i].style.gridArea = `${Math.floor(i / 10) + 1} / ${\n      (i % 10) + 1\n    } / span 1 / span 1`;\n    board.cells[i].dataset.index = i;\n    board.appendChild(board.cells[i]);\n  }\n}\n\nconst board1 = document.querySelector('#board1');\n\non('dragEvent', checkHover);\non('dragEnd', handleRelease);\n\ncreateGrid(100, board1);\n\nfunction checkHover(positionData) {\n  const { startX, endX, startY, endY } = positionData;\n\n  board1.cells.forEach((cell) => {\n    const bound = cell.getBoundingClientRect();\n    const half = bound.width / 2;\n\n    const maxLeft = bound.left + half;\n    const minRight = bound.right - half;\n    const maxTop = bound.top + half;\n    const minBottom = bound.bottom - half;\n\n    if (startX < maxLeft && endX > minRight && startY < maxTop && endY > minBottom) {\n      cell.classList.add('highlight');\n    } else {\n      cell.classList.remove('highlight');\n    }\n  });\n}\n\nfunction handleRelease(element) {\n  const area = board1.cells.reduce(\n    (sum, cell) =>\n      cell.classList.contains('highlight') && !cell.classList.contains('placed')\n        ? sum + 1\n        : sum,\n    0\n  );\n  if (area === element.area) {\n    placeImage(element);\n  } else {\n    element.style.top = '';\n    element.style.left = '';\n    removeHighlights();\n  }\n}\n\nfunction placeImage(element) {\n  const imageWrapper = document.createElement('div');\n  imageWrapper.classList.add('placed-img-wrapper');\n  const image = imageGenerator[element.type]();\n  image.classList.add('placed-img');\n\n  const start = board1.cells.findIndex((cell) => cell.classList.contains('highlight'));\n\n  const matchData = element.style.transform.match(/\\d+/);\n  if (matchData && Number(matchData) % 360 !== 0) {\n    if (Number(matchData) % 180 !== 0) {\n      imageWrapper.style.height = image.style.width;\n      [element.spanY, element.spanX] = [element.spanX, element.spanY];\n    }\n    if (matchData == 90) {\n      image.style.transform = `translateX(${image.style.height}) rotate(${matchData}deg)`;\n    } else if (matchData == 270) {\n      image.style.transform = `translateY(${image.style.width}) rotate(${matchData}deg)`;\n    } else {\n      image.style.transform = `translateY(100%) translateX(100%) rotate(${matchData}deg)`;\n    }\n  }\n\n  imageWrapper.style.gridRow = `${Math.floor(start / 10) + 1} / span ${element.spanY}`;\n  imageWrapper.style.gridColumn = `${(start % 10) + 1} / span ${element.spanX}`;\n\n  element.remove();\n  transformHighlights();\n  imageWrapper.appendChild(image);\n  board1.appendChild(imageWrapper);\n}\n\nfunction removeHighlights() {\n  board1.cells.forEach((cell) => cell.classList.remove('highlight'));\n}\n\nfunction transformHighlights() {\n  board1.cells.forEach((cell) => {\n    if (cell.classList.contains('highlight')) {\n      cell.classList.remove('highlight');\n      cell.classList.add('placed');\n    }\n  });\n}\n\nfunction listenForAttack(board) {\n  board.addEventListener('click', handleAttack);\n}\n\nfunction unListenForAttack(board) {\n  board.removeEventListener('click', handleAttack);\n}\n\nfunction handleAttack(e) {\n  const { index } = e.target.dataset;\n  if (!index) return;\n  console.log(indexToCoordinates(index));\n}\n\nlistenForAttack(board1);\n","function indexToCoordinates(index) {\n  const x = index % 10;\n  const y = Math.floor(index / 10);\n  return [x, y];\n}\n\nfunction coordinatesToIndex(coords) {\n  return coords[1] * 10 + coords[0];\n}\n\nexport { indexToCoordinates, coordinatesToIndex };\n","import * as imageGenerator from './imageGenerator';\nimport { emit } from './observer';\n\nconst stagingArea = document.querySelector('.staging-area');\nconst previews = document.querySelectorAll('.img-preview');\n\nconst rotateButton = document.querySelector('.rotate');\nconst clearButton = document.querySelector('.clear');\n\npreviews.forEach((preview) => preview.addEventListener('click', showStagedImage));\nrotateButton.addEventListener('click', rotate);\nclearButton.addEventListener('click', clearStagedImages);\n\nlet cursorOffsetX;\nlet cursurOffsetY;\nlet staged;\n\nfunction showStagedImage(e) {\n  const image = imageGenerator[this.id]();\n  image.classList.add('staging-img');\n  image.addEventListener('mousedown', dragStart);\n  if (stagingArea.firstChild) {\n    stagingArea.removeChild(stagingArea.firstChild);\n  }\n  stagingArea.appendChild(image);\n  staged = image;\n}\n\nfunction rotate() {\n  if (!staged) return;\n  const matchData = staged.style.transform.match(/\\d+/);\n  const deg = matchData ? Number(matchData[0]) + 90 : 90;\n  staged.style.transform = `rotate(${deg}deg)`;\n}\n\nfunction clearStagedImages() {\n  const children = Array.from(board1.children);\n  for (const node of children) {\n    if (node.classList.contains('placed-img-wrapper')) {\n      node.remove();\n    } else {\n      node.classList.remove('placed');\n    }\n  }\n}\n\nfunction dragStart(e) {\n  e.preventDefault();\n  cursorOffsetX = e.clientX - this.offsetLeft;\n  cursurOffsetY = e.clientY - this.offsetTop;\n  this.classList.add('grabbing');\n\n  const boundDragMove = dragMove.bind(this);\n  document.addEventListener('mousemove', boundDragMove);\n  document.addEventListener(\n    'mouseup',\n    () => {\n      document.removeEventListener('mousemove', boundDragMove);\n      emit('dragEnd', this);\n    },\n    { once: true }\n  );\n}\n\nfunction dragMove(e) {\n  this.style.top = (e.clientY - cursurOffsetY).toString() + 'px';\n  this.style.left = (e.clientX - cursorOffsetX).toString() + 'px';\n  const bound = this.getBoundingClientRect();\n  const positionData = {\n    startX: bound.left,\n    endX: bound.right,\n    startY: bound.top,\n    endY: bound.bottom,\n  };\n\n  emit('dragEvent', positionData);\n}\n","const board = document.querySelector('.board');\n\nconst boardWidth = 500;\nconst squareWidth = boardWidth / 10; // number of cells in row\n\nfunction flute() {\n  return newImage('flute', 1, 3);\n}\n\nfunction trombone() {\n  const image = newImage('trombone', 1, 5);\n  image.classList.add('stretch');\n  return image;\n}\n\nfunction clarinet() {\n  return newImage('clarinet', 1, 3);\n}\n\nfunction violin() {\n  return newImage('violin', 1, 3);\n}\n\nfunction bassoon() {\n  return newImage('bassoon', 1, 4);\n}\n\nfunction cello() {\n  return newImage('cello', 2, 5);\n}\n\nfunction horn() {\n  return newImage('horn', 2, 2);\n}\n\nfunction piccolo() {\n  return newImage('piccolo', 1, 2);\n}\n\nfunction trumpet() {\n  return newImage('trumpet', 1, 3);\n}\n\nfunction newImage(type, width, height) {\n  const image = new Image();\n  image.src = `./images/${type}.png`;\n  image.style.width = `${squareWidth * width}px`;\n  image.style.height = `${squareWidth * height}px`;\n  image.spanX = width;\n  image.spanY = height;\n  image.area = width * height;\n  image.type = type;\n  return image;\n}\n\nexport { clarinet, flute, trombone, violin, bassoon, cello, horn, trumpet, piccolo };\n","const events = {};\n\nfunction on(eventName, fn) {\n  events[eventName] ||= [];\n  events[eventName].push(fn);\n}\n\nfunction off(eventName, fn) {\n  if (!events[eventName]) return;\n\n  for (let i = 0; i < events[eventName].length; i++) {\n    if (events[eventName][i] === fn) {\n      events[eventName].splice(i, 1);\n      break;\n    }\n  }\n}\n\nfunction emit(eventName, data) {\n  if (!events[eventName]) return;\n\n  events[eventName].forEach((fn) => fn(data));\n}\n\nexport { on, off, emit };\n","function humanPlayerFactory(homeBoard, opponentBoard) {\n  function attack(coords) {\n    const coordinates = coords || getCoords();\n    opponentBoard.receiveAttack(coordinates);\n  }\n\n  function getCoords() {\n    // get coordinates from User/DOM\n  }\n\n  function placeShip(coords) {\n    homeBoard.placeShip(coords);\n  }\n\n  function placeAllShips() {\n    // while (remainingShips)\n      // get name and coordinates of ship from User/DOM\n      // placeShip\n  }\n\n  function isComputer() {\n    return false;\n  }\n\n  return { attack, placeShip, isComputer };\n}\n\nfunction computerPlayerFactory(homeBoard, opponentBoard) {\n  const ships = {\n    'Carrier': 5,\n    'Battleship': 4,\n    'Destroyer': 3,\n    'Submarine': 3,\n    'Patrol Boat': 2\n  }\n\n  const size = 10;\n  const possibleMoves = [];\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      possibleMoves.push([i, j]);\n    }\n  }\n\n  function isComputer() {\n    return true;\n  }\n\n  function attack() {\n    if (possibleMoves.length == 0) throw new Error('there are no moves left');\n    const index = Math.floor(Math.random() * possibleMoves.length);\n    const move = possibleMoves[index];\n    possibleMoves[index] = possibleMoves[possibleMoves.length - 1];\n    possibleMoves.pop();\n    opponentBoard.receiveAttack(move);\n  }\n\n  function placeAllShips() {\n    for (const ship in ships) {\n      const name = ship;\n      const length =  ships[ship];\n      const set = homeBoard.findSets(length);\n      const coords = set[Math.floor(Math.random() * set.length)];\n      homeBoard.placeShip(coords, name);\n    }\n  }\n\n  return { attack, placeAllShips, isComputer }\n}\n\nexport { humanPlayerFactory, computerPlayerFactory };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import './setup';\nimport './DOMController';\n"],"names":[],"sourceRoot":""}